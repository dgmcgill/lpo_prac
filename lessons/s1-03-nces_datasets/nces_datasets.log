--------------------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  /Users/doylewr/lpo_prac/lessons/s1-03-nces_datasets/nces_datasets.log
  log type:  text
 opened on:   8 Sep 2021, 10:59:22

. 
. 
. /***
> Directory Structure
> -----------
> 
> Data files (particularly large ones) should be stored in their own 
> subdirectories. While it's possible to simply dump everything in one 
> big directory, you may find that over time, as the folder grows, 
> it becomes very difficult to find what you need and almost impossible 
> to share your work with others. Yes, your computer can search really well. 
> An organized directory structure is for you, the human. 
> Get into the habit now, and you'll be thankful later.
> ***/
. 
. 
. /***
> Creating Directory Structures
> ---------------
> 
> In programming, we many times need to move around in directories on a
> computer. Sometimes we use fixed paths, which specify exactly where something is
> on the computer, other times we use relative paths. An example of a fixed path 
> would be something like:
> 
> ___{c 96}/Users/doylewr/lpo_prac/lessons/s1-03-nces_datasets{c 96}___
> 
> That path specifies the exact directory on my computer. In general, you really
> should avoid fixed paths, because everyone's computer is different. However,
> you might have something like a clone of a GitHub repository on your computer. 
> Within that repository, you can specify relative paths to clarify where you
> want the program to look. A standard directory structure for a statistical
> programming project is something like this:
> 
> ___{c 96}project_directory/
> 
>                 ----data/
>                 
>                         -----source/
>                         
>                         -----analysis/
>                         
>                 ----scripts/
>                 
>                 ----output/
>                 
>                         -----tables/
>                         
>                         -----graphics/
>                         
>                 ----paper{c 96}___
> 
> Since our code exists in the ./scripts directory, to access the source 
> data names source_data.dta we would need to go up one level to the main 
> project directory and then down into the source data directory. 
> The command for this in Stata would be: 
> 
> ___{c 96}use ../data/source/source_data.dta{c 96}___            
> 
> The ___{c 96}../{c 96}___ means to go up one level. Using ___{c 96}./{c 96}___ means to go into 
> a subdirectory, 
> or down one level. 
> 
> In my github repository, I store large data files in the data directory. To
> access that directory from the current lesson 
> I need to go up two levels and then into the data directory, so the relative
> path is: ___{c 96}../../data/{c 96}___. 
> 
> 
> ***/
. 
. 
. 
. /***
> Working with globals
> ---------------
> We're going to set the structure for ourselves using global macros. In Stata,
> a macro is a variable that can be set to some value. There are two types of 
> macros in Stata-- global and local. A global macro is persistent during a 
> session (when Stata is open). A local macro is forgotten as soon as a script
> (do file) is run. In general, I will encourage you to use local macros, as their
> use enables better programming practices and replication. However, using 
> global macros is a good idea for data management. 
> 
> First we tell Stata what a macro will represent:
> 
> ***/
. 
. global ddir "../../data/"

. 
. /***
> What the above means is that every time I call that macro, Stata will know I
> means the directory in question. We can test this by asking Stata to display the
> global ...
> ***/
. 
. display "$ddir"
../../data/

. 
. 
. 
. /***
> ... and there you have it. 
> 
> One big takeaway from all of this is that you should *never* include a {c 96}cd{c 96} statement 
> in
> a do file that references a specific spot on your computer. Either don't include a cd command at
>  all, 
> or include a cd command that makes use of a relative directory strucure. The easiest (but not ne
> cessarialy the best) way to do this is to assume that the do file and the 
> 
> I'm also going to get the information for my current directory so I can easily return to it.
> 
> ***/
. 
. global cdir `c(pwd)'

. 
. di "$cdir"
/Users/doylewr/lpo_prac/lessons/s1-03-nces_datasets

. 
. 
. /***
> Working with HSLS
> 
> The high school longitudinal study of 2009 tracks a set of students who began 
> high school in 2009. It has been updated in 2012 and again in 2016.  It's a 
> great source of information about how students navigate high school and make 
> the transition to college or the workforce (and in many cases both).
> 
> HSLS can be accessed using the nces electronic codebook: 
> https://nces.ed.gov/OnlineCodebook Once variables 
> have been selected from the codebook, they can be accessed using the
>  ___{c 96}use{c 96}___ . . .___{c 96}using{c 96}___
> approach below:
> ***/
. 
. use  ///
>         STU_ID ///
>         X1SES ///
>         using "${ddir}hsls_17_student_pets_sr_v1_0.dta", ///
>         clear

. 
. save "${ddir}hsls_analysis.dta",replace
file ../../data/hsls_analysis.dta saved

. 
. /***
> Working with NHES
> ------------------
> The National Household Education Survey collects data on the education 
> activities of children and adults in the United States. The NHES has varying 
> emphases in different years. 
> 
> Because of the different emphases, NHES will include different data files in 
> each year. It's important to know which data file a given variable comes from.
> Below, I open up the early childhood program data file and extract a few 
> variables regarding the child's participation in early childhood programs. 
> 
> ***/
. 
. use ///
> BASMID ///
> CPNNOWX ///
> CPTYPE ///
> CPHRS ///
> using "${ddir}nhes_16_ecpp_v1_0.dta", clear 

. 
. renvars *, lower

. 
. save "${ddir}nhes_analsyis.dta", replace
file ../../data/nhes_analsyis.dta saved

. 
. 
. /***
> Working with ECLS 2011
> -------------------
> 
> [ECLS 2011](https://nces.ed.gov/ecls/kindergarten2011.asp) uses a nationally represntative sampl
> e of students 
> that were in kindergarten as of 2011. This study is excellent for tracking younger students as t
> hey progress through
> early grades. 
> 
> ECLS is a bit different in that NCES doesn't have any equivalent of the online codebook for it. 
> Instead we have to navigate it using some other tools. 
> 
> NCES provides a do file, a dictionary file, and a data file (zipped) for ECLS 2011. The code bel
> ow assumes that you have downloaded the zip file {c 96}ChildK5p.zip{c 96} from [the ECLS data pr
> oducts website](https://nces.ed.gov/ecls/dataproducts.asp). 
> 
> 
> 
> 
> ***/
. 
. clear

. 
. // Look to see if file exists
. capture confirm file "${ddir}ChildK5p.zip"

. //If it doesn't then go ahead and download it a
. if _rc==601 {
.         copy https://nces.ed.gov/ecls/data/2019/ChildK5p.zip "${ddir}ChildK5p.zip"
. }

. 
. capture confirm file "${ddir}childK5p.dat"

. //If it doesn't then go ahead and download it a
. if _rc==601 {
.         unzipfile ChildK5p.zip
. }

. 
.         
. 
. // Check for ancillary files locally
. 
. //Do file
. 
. capture confirm file "${ddir}ECLSK2011_K5PUF.do"

. //If it doesn't then go ahead and download it. 
. if _rc==601 {
.         copy https://nces.ed.gov/ecls/data/2019/ECLSK2011_K5PUF.do ${ddir}ECLSK2011_K5PUF.do
. }

. 
. // Dictionary file: located in same directory as data
. 
. 
. capture confirm file "${ddir}ECLSK2011_K5PUF.dct"

. //If it doesn't then go ahead and download it. 
. if _rc==601 {
.         copy https://nces.ed.gov/ecls/data/2019/ECLSK2011_K5PUF.do "${ddir}ECLSK2011_K5PUF.dct"
. }

. 
. //Check for stata data file if it doesn't exist use the two do fies to create it. 
. // THE DO FILE MUST BE ADJUSTED FOR THE DIRECTORY STRUCTURE USED. 
. 
. //set maxvar 32767 , permanently /* Stata SE max */
. 
. capture confirm file "${ddir}ECLSK2011_K5PUF.dta"

. if _rc==601{
. cd $ddir
. do ECLSK2011_K5PUF.do
. cd $cdir
. }

. 
. use   ///
>  CHILDID ///
>  X9SESL_I ///
>  X9INCCAT_I ///
>  using "${ddir}ECLSK2011_K5PUF.dta", clear

.  
. renvars *, lower

. 
. 
. save "${ddir}ecls_analsyis.dta", replace
file ../../data/ecls_analsyis.dta saved

. 
. 
. exit 

end of do-file


Warning
your documentation has a width of 274 which is beyond the limit of Stata. This can corrupt your
document... avoid writing very long lines in the document.


(markdoc created nces_datasets.md)


